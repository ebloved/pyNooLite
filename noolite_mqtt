#!/usr/bin/env python


import sys
import paho.mqtt.client as mqtt
import time

USERNAME = 'username'
PASSWORD = 'password'
HOSTNAME = 'hostname'

try:
    import noolite
except ImportError:
    sys.stderr.write("Please, install last pyusb\n")
    sys.exit(-1)



def on_connect(client, userdata, flags, rc):
    client.subscribe("cmnd/noo/#")
    client.publish("stat/noo/LWT", "Online", qos=0, retain=True)

def on_message(client, userdata, msg):
    ch=(msg.topic.split('/')[2])
    cmd=msg.payload
    client.publish("stat/noo/result", "Channel"+" "+ch+" "+"is"+" "+msg.payload)

    n = noolite.NooLite()
    cmds = {
        'on': n.on,
        'off': n.off,
        'switch': n.switch,
        'set': n.set,
        'save': n.save,
        'load': n.load,
        'bind': n.bind,
        'unbind': n.unbind
    }

    if cmd not in cmds:
        sys.stderr.write("Unknown command: %s.\n" % (cmd))
        client.publish("stat/noo/result", "Unknown command")
    else:
      try:
          if cmd == 'set':
              cmds[cmd](ch, lvl)
              time.sleep(0.2)
          else:
	      cmds[cmd](ch)
              time.sleep(0.2)
      except (TypeError, ValueError, noolite.NooLiteErr) as err:
          client.publish("stat/noo/result", "ERROR")


def help():
    print("""
    USAGE:
    on <ch>         Turn power ON for specified channel
    off <ch>        Turn power OFF for specified channel
    switch <ch>     Switch between ON and OFF for specified channel
    set <ch> <lvl>  Set power level for specified channel
    save <ch>       Save state  for specified channel as a scenario
    load <ch>       Call saved scenario for specified channel
    bind <ch>       Send binding signal for specified channel
    unbind <ch>     Send unbinding signal for specified channel

    Channels should be between 0 and 7.
    Level should be between 0 and 120.

    Examples:
        $ ./noolite on 1
        $ ./noolite set 0 115
    """)

client = mqtt.Client()
client.on_connect = on_connect
client.on_message = on_message
client.username_pw_set(USERNAME, PASSWORD)
client.will_set("stat/noo/LWT", "Offline", qos=0, retain=True)
client.connect("hostname", 1883, 60)

client.loop_forever(retry_first_connection=True)
